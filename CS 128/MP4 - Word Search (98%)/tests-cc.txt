// clang-format off
/////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
//  Written By : Student Name                    Environment : ubuntu:bionic               //
//  Date ......: 2021/02/10                      Compiler ...: clang-10                    //
/////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
// clang-format on
/////////////////////////////////////////////////////////////////////////////////////////////
//                             Framework Set-up //
/////////////////////////////////////////////////////////////////////////////////////////////
#ifndef CATCH_CONFIG_MAIN
#  define CATCH_CONFIG_MAIN
#endif
#include "catch.hpp"

/////////////////////////////////////////////////////////////////////////////////////////////
//                                 Includes //
/////////////////////////////////////////////////////////////////////////////////////////////
#include <stdexcept>

#include "CharPositions.hpp"
#include "WordLocation.hpp"
#include "WordSearchSolver.hpp"

/////////////////////////////////////////////////////////////////////////////////////////////
//                             Helpers/Constants //
/////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////
//                                Test Cases //
/////////////////////////////////////////////////////////////////////////////////////////////

TEST_CASE("True == True", "") {
  std::vector<std::vector<char>> puzzle{{'d', 'e', 'a', 'o', 'u'},
                                        {'h', 'e', 'l', 'p', 'o'},
                                        {'c', 'a', 'l', 'o', 'm'},
                                        {'a', 'e', 't', 'a', 'u'},
                                        {'t', 'e', 't', 'o', 'u'}};
  WordSearchSolver wss(puzzle);

  REQUIRE(wss.FindWord("help", CheckDirection::kHorizontal).word == "help");
  REQUIRE(wss.FindWord("cat", CheckDirection::kVertical).word == "cat");
  REQUIRE(wss.FindWord("let", CheckDirection::kLeftDiag).word == "let");
  REQUIRE(wss.FindWord("hat", CheckDirection::kRightDiag).word == "hat");

  REQUIRE(wss.FindWord("help").word == "help");
  REQUIRE(wss.FindWord("cat").word == "cat");
  REQUIRE(wss.FindWord("let").word == "let");
  REQUIRE(wss.FindWord("hat").word == "hat");

  REQUIRE(wss.FindWord("dog", CheckDirection::kHorizontal).word.empty());
  REQUIRE(wss.FindWord("dog", CheckDirection::kVertical).word.empty());
  REQUIRE(wss.FindWord("dog", CheckDirection::kLeftDiag).word.empty());
  REQUIRE(wss.FindWord("dog", CheckDirection::kRightDiag).word.empty());

  REQUIRE(wss.FindWord("dog").word.empty());

  REQUIRE(puzzle[0].size() == 5);
  REQUIRE(puzzle.size() == 5);

  REQUIRE(puzzle[0].size() >= 0);
  REQUIRE(puzzle.size() >= 0);
}

/////////////////////////////////////////////////////////////////////////////////////////////